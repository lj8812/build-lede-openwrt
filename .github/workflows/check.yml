name: OpenWrt Compatibility Check

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' 

jobs:
  compatibility-check:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    env:
      PLUGIN_PATH: "package/network/services/luci-app-macfilter"

    steps:
    # ================== 源码准备 ==================
    - name: Checkout LEDE firmware
      uses: actions/checkout@v4
      with:
        repository: coolsnowwolf/lede
        path: lede
        submodules: recursive

    - name: Checkout plugin
      uses: actions/checkout@v4
      with:
        repository: lj8812/luci-app-macfilter
        path: plugin

    # ================== 冲突预检 ==================
    - name: Pre-check conflicts
      run: |
        # 1. 文件结构验证
        REQUIRED_FILES=(
          "plugin/luasrc/controller/macfilter.lua"
          "plugin/root/etc/init.d/macfilter"
        )
        for file in "${REQUIRED_FILES[@]}"; do
          if [ ! -f "$file" ]; then
            echo "::error::Missing plugin file: $file"
            exit 1
          fi
        done

        # 2. Makefile 基础语法检查
        if ! grep -q '^LUCI_DEPENDS' plugin/Makefile; then
          echo "::error::Makefile missing LUCI_DEPENDS definition"
          exit 1
        fi

    # ================== 注入插件 ==================
    - name: Integrate plugin
      run: |
        mkdir -p lede/$PLUGIN_PATH
        cp -r plugin/* lede/$PLUGIN_PATH/

        # 解决可能的路径大小写问题
        find lede/$PLUGIN_PATH -type f -exec sed -i 's/\/etc\/config\/MacFilter/\/etc\/config\/macfilter/g' {} +

    # ================== 编译环境 ==================
    - name: Setup build environment
      run: |
        sudo apt update
        sudo apt install -y \
          build-essential \
          libncurses5-dev \
          zlib1g-dev \
          libdeflate-dev

    # ================== 编译检测 ==================
    - name: Build plugin
      working-directory: ./lede
      run: |
        # 初始化编译系统
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        make defconfig

        # 生成编译日志
        mkdir -p logs
        set -o pipefail

        # 关键编译步骤
        if ! make package/$PLUGIN_PATH/{clean,compile} V=sc -j$(nproc) 2>&1 | tee logs/build.log; then
          echo "::error::Build failed with exit code $?"
          exit 1
        fi

        # 验证产出文件
        if [ ! -f bin/packages/*/luci/luci-app-macfilter*.ipk ]; then
          echo "::error::No IPK package generated"
          exit 1
        fi

    # ================== 智能报告 ==================
    - name: Generate report
      if: always()
      run: |
        echo "## Compatibility Report" > report.md
        echo "### Build Status: ${{ job.status }}" >> report.md

        # 错误分类
        if grep -q "multiple definition" logs/build.log; then
          echo "❌ ​**Symbol Conflicts**" >> report.md
          grep -oP 'multiple definition of \K[^ ]+' logs/build.log | sort -u >> report.md
        fi

        if grep -q "No such file" logs/build.log; then
          echo "❌ ​**Missing Files**" >> report.md
          grep -oP "No such file.*'\K[^']+" logs/build.log | sort -u >> report.md
        fi

        # 成功时输出验证
        if [ ${{ job.status }} == 'success' ]; then
          echo "✅ ​**Validation Passed**" >> report.md
          echo "Generated IPK: $(ls bin/packages/*/luci/luci-app-macfilter*.ipk)" >> report.md
        fi

    # ================== 结果处理 ==================
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-report
        path: |
          lede/logs/build.log
          report.md
          lede/bin/packages/*/luci/luci-app-macfilter*.ipk
