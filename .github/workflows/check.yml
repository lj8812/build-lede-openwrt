name: OpenWrt Plugin Compatibility Check

on:
  workflow_dispatch: # 手动触发
  schedule:
    - cron: '0 0 * * *'  # 每日UTC午夜自动执行

jobs:
  compatibility-check:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    # ================== 检出代码 ==================
    - name: Checkout LEDE firmware
      uses: actions/checkout@v4
      with:
        repository: coolsnowwolf/lede
        path: lede
        ref: master
        fetch-depth: 1

    # ================== 检出插件 ==================
    - name: Checkout macfilter plugin
      uses: actions/checkout@v4
      with:
        repository: lj8812/luci-app-macfilter
        path: plugin
        # 修正1：使用正确的分支名称
        ref: main  # 或移除此参数以使用仓库默认分支
        # 修正2：增加调试信息
        fetch-depth: 0  # 获取完整历史用于诊断
    - name: Debug plugin branch
      run: |
        cd plugin
        git branch -a
        git log -1 --oneline

    # ================= 注入插件 =================
    - name: Inject plugin files
      run: |
        PLUGIN_DEST="lede/package/network/services/luci-app-macfilter"
        
        # 创建目录并复制所有插件文件
        mkdir -p $PLUGIN_DEST
        cp -r plugin/* $PLUGIN_DEST/

        # 验证必要文件存在
        REQUIRED_FILES=(
          "$PLUGIN_DEST/Makefile"                # 必须存在的Makefile
          "$PLUGIN_DEST/luasrc/model/cbi/macfilter.lua"
          "$PLUGIN_DEST/root/etc/init.d/macfilter"
        )

        # 关键变量检查
        if ! grep -q "LUCI_DEPENDS" $PLUGIN_DEST/Makefile; then
          echo "::warning::插件Makefile缺少依赖声明，建议添加: LUCI_DEPENDS:=+luci-base +kmod-mac-filter"
        fi

        # 添加版本校验
        if ! grep -q "PKG_VERSION" $PLUGIN_DEST/Makefile; then
          sed -i '1i PKG_VERSION:=1.0.0' $PLUGIN_DEST/Makefile
          echo "::notice::已自动添加PKG_VERSION到Makefile"
        fi

        # 目录结构验证
        tree -L 4 $PLUGIN_DEST

    # ================== 编译环境 ==================
    - name: Setup build environment
      run: |
        sudo apt update
        sudo apt install -y \
          build-essential \
          ccache \
          libncurses5-dev \
          zlib1g-dev

    # ================== 编译检测 ==================
    - name: Run compatibility check
      working-directory: ./lede
      env:
        CCACHE_DIR: /tmp/ccache
        CCACHE_MAXSIZE: 2G
      run: |
        # 初始化编译系统
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        make defconfig

        # 创建日志目录并编译
        mkdir -p logs
        set -o pipefail
        make package/network/services/luci-app-macfilter/{clean,compile} \
          V=sc \
          -j$(($(nproc) + 1)) 2>&1 | tee logs/build.log

        # 验证生成IPK文件
        if ! ls bin/packages/*/luci/luci-app-macfilter*.ipk; then
          echo "::error::Failed to generate IPK package"
          exit 1
        fi

    # ================== 报告生成 ==================
    - name: Generate conflict report
      if: always()
      working-directory: ./lede
      run: |
        # 初始化报告文件
        REPORT_FILE="conflict-report.md"
        echo "# OpenWrt Plugin Compatibility Report" > $REPORT_FILE
        echo "**Generated at**: $(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $REPORT_FILE

        # 错误摘要
        echo "## Build Error Summary" >> $REPORT_FILE
        grep --color=never -Ein "error:|warning:" logs/build.log | \
          sed 's/^/    /' >> $REPORT_FILE

        # 智能修复建议
        echo "## Suggested Fixes" >> $REPORT_FILE

        # 符号冲突修复
        if grep -q "multiple definition" logs/build.log; then
          echo "### Symbol Conflicts" >> $REPORT_FILE
          grep -oP "multiple definition of '\K[^']+" logs/build.log | sort -u | while read sym; do
            new_sym="${sym}_macfilter_$(date +%s | tail -c 3)"
            echo "- Rename \`$sym\` to \`$new_sym\` in:" >> $REPORT_FILE
            grep -rlw "$sym" package/network/services/luci-app-macfilter/ | \
              sed 's/^/  - `/;s/$/`/' >> $REPORT_FILE
          done
        fi

        # 路径缺失修复
        if grep -q "No such file" logs/build.log; then
          echo "### Missing Files" >> $REPORT_FILE
          grep -oP "No such file or directory.*'\K[^']+" logs/build.log | sort -u | while read f; do
            echo "- Required file: \`$f\`" >> $REPORT_FILE
            echo "  Possible locations:" >> $REPORT_FILE
            echo "  1. \`package/network/services/luci-app-macfilter/root/$f\`" >> $REPORT_FILE
            echo "  2. \`package/network/services/luci-app-macfilter/files/$f\`" >> $REPORT_FILE
          done
        fi

    # ================== 结果归档 ==================
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: openwrt-build-reports-${{ github.run_id }}
        path: |
          lede/logs/build.log
          lede/conflict-report.md
          lede/bin/packages/*/luci/luci-app-macfilter*.ipk
        retention-days: 3
